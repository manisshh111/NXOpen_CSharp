using System;
using NXOpen;

public class Program
{
    
    public static Program theProgram;
    public static bool isDisposeCalled;

    public Program()
    {
        try
        {
            Session theSession = Session.GetSession();
            Part workPart = theSession.Parts.Work;
            Part displayPart = theSession.Parts.Display;
            CurveCollection curves = workPart.Curves;

            Point3d vertex = new Point3d(0, 0, 0);
            Point3d focus = new Point3d(100, 0, 0);
            Vector3d AxisX = new Vector3d(1, 0, 0);
            Vector3d AxisY = new Vector3d(0, 1, 0);

            double focLength = focus.X;
            double h = 100;

            object lens = workPart.Curves.CreateParabola(vertex, AxisX, AxisY, focLength, -h, h);
            
            for(double y= -h; y<=h; y +=10)
            {
                double x = (y * y) / (4 * focLength);
                Point3d p1 = new Point3d(x, y, 0);
                Point3d p2 = new Point3d(250, y, 0);

               workPart.Curves.CreateLine(focus, p1);
               workPart.Curves.CreateLine(p1, p2);

            }



            isDisposeCalled = false;
        }
        catch (NXOpen.NXException ex)
        {
        }
    }

    public static int Main(string[] args)
    {
        int retValue = 0;
        try
        {
            theProgram = new Program();

        }
        catch (NXOpen.NXException ex)
        {
        }
        return retValue;
    }

    public static int GetUnloadOption(string arg)
    {
         return System.Convert.ToInt32(Session.LibraryUnloadOption.Immediately);


    }

}

