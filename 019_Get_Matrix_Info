//Check ApplyCB directly


using System;
using NXOpen;
using NXOpen.BlockStyler;
using NXOpen.UF;



public class CSYS
{

    private static Session theSession = null;
    static UFSession ufSession = UFSession.GetUFSession();
    private static UI theUI = null;
    private string theDlxFileName;
    private NXOpen.BlockStyler.BlockDialog theDialog;
    private NXOpen.BlockStyler.Group group0;
    private NXOpen.BlockStyler.SelectObject selectedObject;
    

    public CSYS()
    {
        try
        {
            theSession = Session.GetSession();
            theUI = UI.GetUI();
            theDlxFileName = @"C:\Users\RAJNISH SHARMA\OneDrive\Documents\Visual Studio 2015\Projects\1\CSYS\application\CSYS.dlx";
            theDialog = theUI.CreateDialog(theDlxFileName);
            theDialog.AddApplyHandler(new NXOpen.BlockStyler.BlockDialog.Apply(apply_cb));
            theDialog.AddOkHandler(new NXOpen.BlockStyler.BlockDialog.Ok(ok_cb));
            theDialog.AddUpdateHandler(new NXOpen.BlockStyler.BlockDialog.Update(update_cb));
            theDialog.AddInitializeHandler(new NXOpen.BlockStyler.BlockDialog.Initialize(initialize_cb));
            theDialog.AddDialogShownHandler(new NXOpen.BlockStyler.BlockDialog.DialogShown(dialogShown_cb));
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    public static void Main()
    {
        CSYS theCSYS = null;
        try
        {
            theCSYS = new CSYS();
            theCSYS.Show();
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        finally
        {
            if(theCSYS != null)
                theCSYS.Dispose();
                theCSYS = null;
        }
    }
     public static int GetUnloadOption(string arg)
    {
        
         return System.Convert.ToInt32(Session.LibraryUnloadOption.Immediately);
        
    }
    
    public static void UnloadLibrary(string arg)
    {
        try
        {
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }
    

    public NXOpen.UIStyler.DialogResponse Show()
    {
        try
        {
            theDialog.Show();
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return 0;
    }
    

    public void Dispose()
    {
        if(theDialog != null)
        {
            theDialog.Dispose();
            theDialog = null;
        }
    }
    
    
    public void initialize_cb()
    {
        try
        {
            group0 = (NXOpen.BlockStyler.Group)theDialog.TopBlock.FindBlock("group0");
            selectedObject = (NXOpen.BlockStyler.SelectObject)theDialog.TopBlock.FindBlock("selectedObject");
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }

    public void dialogShown_cb()
    {
        try
        {
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
    }
    

    public int apply_cb()
    {
        int errorCode = 0;
        try
        {
            TaggedObject[] objs = selectedObject.GetSelectedObjects();
            Tag objTag = (objs[0]).Tag;
            Tag matrixTag;
            ufSession.Csys.AskMatrixOfObject(objTag, out matrixTag);

            if (matrixTag == Tag.Null)
            {
                UI.GetUI().NXMessageBox.Show("Information", NXMessageBox.DialogType.Information, "Null Matrix");

            }
            else
            {
                double[] matrixValues = new double[9];
                ufSession.Csys.AskMatrixValues(matrixTag, matrixValues);

                string str = "Xx = "+ matrixValues[0].ToString() + " ; ";
                str += "Xy = " + matrixValues[1].ToString()+ " ; ";
                str += "Xz = " + matrixValues[2].ToString() + "\n";
                str += "Yx = " + matrixValues[3].ToString() + " ; ";
                str += "Yy = " + matrixValues[4].ToString() + " ; ";
                str += "Yz = " + matrixValues[5].ToString() + "\n";
                str += "Zx = " + matrixValues[6].ToString() + " ; ";
                str += "Zy = " + matrixValues[7].ToString() + " ; ";
                str += "Zz = " + matrixValues[8].ToString();
                UI.GetUI().NXMessageBox.Show("Information", NXMessageBox.DialogType.Information, str);
            }
        }
        catch (Exception ex)
        {
            errorCode = 1;
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return errorCode;
    }
    

    public int update_cb( NXOpen.BlockStyler.UIBlock block)
    {
        try
        {
            if(block == selectedObject)
            {
            }
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return 0;
    }
    

    public int ok_cb()
    {
        int errorCode = 0;
        try
        {
            errorCode = apply_cb();
        }
        catch (Exception ex)
        {
            errorCode = 1;
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return errorCode;
    }
    

    public PropertyList GetBlockProperties(string blockID)
    {
        PropertyList plist =null;
        try
        {
            plist = theDialog.GetBlockProperties(blockID);
        }
        catch (Exception ex)
        {
            theUI.NXMessageBox.Show("Block Styler", NXMessageBox.DialogType.Error, ex.ToString());
        }
        return plist;
    }
    
}
