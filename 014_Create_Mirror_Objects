using System;
using NXOpen;
using NXOpen.UF;

public class Program
{

    public static Session theSession = Session.GetSession();
    public static UFSession ufSession = UFSession.GetUFSession();




    public static void Main(string[] args)
    {

        try
        {
            //Create Sketch
            string name = "Sketch1";
            Tag tag1;
            ufSession.Sket.InitializeSketch(ref name, out tag1);
            //pass X-Axis, YAxis & origin to matrix array
            double[] matrix = { 1, 0, 0, 0, 1, 0, 0, 0, 0 };


            Tag[] nullTag1 = new Tag[0];
            int[] null2 = new int[0];

            Tag sketchTag;
            ufSession.Sket.CreateSketch(name, 2, matrix, nullTag1, null2, 1, out sketchTag);
           

            //Create Center Line

            UFCurve.Line dataMembers1 = new UFCurve.Line();
            double[] startPoint1 = { 0, 0, 0 };
            double[] endPoint1 = {0 , 20, 0 };

            dataMembers1.start_point = startPoint1;
            dataMembers1.end_point = endPoint1;
            Tag lineTag1;
            ufSession.Curve.CreateLine(ref dataMembers1, out lineTag1);

            //Create Geometry and add to sketch
            UFCurve.Arc arcPt = new UFCurve.Arc();
            double[] centre = { 5, 5, 0 };
            arcPt.arc_center = centre;
            double[] matrixValues = { 1, 0, 0, 0, 1, 0, 0, 0, 1 };
            Tag matrixTag;
            ufSession.Csys.CreateMatrix(matrixValues, out matrixTag);
            //ufSession.Csys.AskMatrixOfObject(sketchTag, out matrixTag);
            arcPt.matrix_tag = matrixTag;
            arcPt.radius = 3;
            arcPt.start_angle = 0;
            arcPt.end_angle = 4;
            Tag geometryTag;
            ufSession.Curve.CreateArc(ref arcPt, out geometryTag );
            Tag[] objectsTag = { geometryTag, lineTag1 };
            ufSession.Sket.AddObjects(sketchTag, 2,objectsTag );

            theSession.ActiveSketch.Activate(Sketch.ViewReorient.True);
            Tag[] geomObjs = { geometryTag };
            int numObjs;
            Tag[] mirroredObjs;
            Tag[] constraints;
            ufSession.Sket.MirrorObjects(sketchTag, lineTag1, 1, geomObjs, out numObjs, out mirroredObjs, out constraints);
            

        }
        catch (NXOpen.NXException ex)
        {

        }

    }


    public static int GetUnloadOption(string arg)
    {

        return System.Convert.ToInt32(Session.LibraryUnloadOption.Immediately);

    }

}

