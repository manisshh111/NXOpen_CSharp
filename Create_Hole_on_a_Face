using System;
using NXOpen;
using NXOpen.UF;
using NXOpen.Features;
using NXOpen.Utilities;

public class Program
{

    private static Session theSession= Session.GetSession();
    public static Program theProgram;
    public static bool isDisposeCalled;
    static UFSession theUFSession = UFSession.GetUFSession();
   

    static int SelectioParams(IntPtr select, IntPtr userData)
    {

        int num_triples = 1;  //no. of options in selection

        UFUi.Mask[] masks = new UFUi.Mask[1];
        masks[0].object_type = UFConstants.UF_face_type;
        masks[0].object_subtype = 0;
        masks[0].solid_type = 0;

        theUFSession.Ui.SetSelMask(select, UFUi.SelMaskAction.SelMaskClearAndEnableSpecific, num_triples, masks);
        return UFConstants.UF_UI_SEL_SUCCESS;


    }

    static void createHole(Tag faceTag)
    {
        Face face = (Face)NXObjectManager.Get(faceTag);

        //Get body from face
        Tag bodyTag;
        theUFSession.Modl.AskFaceBody(face.Tag, out bodyTag);

        //Get face data to create a cylinder in the middle of the face
        double[] position = new double[3];
        double[] dir = new double[3];
        double[] box = new double[6];
        double radius;
        int type;
        double radData;
        int norm;
        theUFSession.Modl.AskFaceData(face.Tag, out type, position, dir, box, out radius, out radData, out norm);

        //reverse the direction for creating hole
        for(int i=0; i < dir.Length; i++)
        {
            if(dir[i]==1 || dir[i] == -1)
            {
                dir[i] = -dir[i];
            }
        }

        if(bodyTag!= Tag.Null)
        {
            Tag cylTag;
            theUFSession.Modl.CreateCylinder(FeatureSigns.Negative, bodyTag, position, "100", "50", dir, out cylTag);
            theUFSession.Disp.SetHighlight(face.Tag, 0);
            OpenSelectionDialog();

        }

    }


    static void OpenSelectionDialog()
    {
        int scope = UFConstants.UF_UI_SEL_SCOPE_WORK_PART;
        UFUi.SelInitFnT selInitFnt = new UFUi.SelInitFnT(SelectioParams);
        IntPtr userdata = IntPtr.Zero;
        int response;
        double[] position = new double[3];
        Tag tag1;
        Tag viewTag;
        theUFSession.Ui.SelectWithSingleDialog("Single Dialog", "Select Any Face", scope, selInitFnt, userdata, out response, out tag1, position, out viewTag);

       if(tag1 != Tag.Null)
        {
            createHole(tag1);
        }

    }



    public static void Main(string[] args)
    {
       
        try
        {
            OpenSelectionDialog();
        }
        catch (NXOpen.NXException ex)
        {
        }
        
    }


    public static int GetUnloadOption(string arg)
    {
        return System.Convert.ToInt32(Session.LibraryUnloadOption.Immediately);

    }

}

